//Класс «Матрица»
//Обеспечить представление матрицы произвольного размера с возможностью изменения числа строк и столбцов.
//Каждая строка матрицы – объект класса «вектор» из задания 8.1.
//Обеспечить в конструкторе автоматическое генерирование имени матрицы(«матрица 1», «матрица 2» и т.д.),
//используя для этого статическое поле – счетчик объектов класса.
//Реализовать в классе 
//метод вывода матрицы на экран с одновременным выводом ее имени.
//Алгоритм обработки, реализующий условие задачи,
//определить как функцию - член класса или как дружественную функцию класса.
//Перегрузить оператор индексирования[] для обращения к элементам
//матрицы с контролем выхода за пределы размерностей.
//В случае выхода за пределы массива генерировать исключения с помощью
//ключевого слова throw.
//Класс может реализовывать следующие операции над матрицами(в зависимости от условия задания) :
//    • сложение, вычитание, умножение на другую матрицу
//• операции ввода / вывода матрицы в стандартные потоки.
//Обеспечить работу с безопасным массивом, т.е.контролировать выход
//индекса элемента массива за допустимый описанием объекта диапазон.
//1. Дана вещественная квадратная матрица А порядка n, векторы х, у с n элементами.
//Составить функцию, которая позволяет получить вектор c = А *(x + y).
#include "matrix.h"

int main()
{
	srand(time(NULL));
	Matrix M(1, 4);
	M.random();
	M.Print();
	Matrix B(1, 4);
	B.random();
	B.Print();
	cout << M + B << endl;
	Matrix C(4, 3);
	C.random();
	C.Print();
	cout << (M + B) * C << endl;
	Matrix R(1,4);
	R.Print();
	R.resize(1, 1);
	R.Print();
    return 0;
}